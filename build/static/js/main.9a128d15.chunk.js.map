{"version":3,"sources":["server/kayttajaService.js","server/tehtavaService.js","components/SisaankirjautumisLomake.js","components/tehtava/YksiTehtava.js","components/tehtava/TehtavaSivu.js","components/TehtavaLomake.js","App.js","reportWebVitals.js","index.js"],"names":["kirjaudu","body","a","osoite","process","onlineUrl","console","log","axios","post","lahetetty","data","token","muokkaa","URL","muokattu","id","_id","otsikko","kuvaus","tekija","put","lisaa","content","config","headers","Authorization","response","poista","delete","then","setToken","newToken","SisaankirjautumisLomake","setKayttaja","useState","kayttajaTunnus","setTunnus","kayttajaSalasana","setSalasana","tunnusValid","timeId","useRef","ilmoitus","setIlmoitus","useStyles","makeStyles","theme","root","flexGrow","paper","backgroundColor","padding","spacing","margin","marginTop","maxWidth","input","image","width","height","kirjautuminen","event","preventDefault","tunnuksetKirjautumiselle","tunnus","salasana","vastaanotettu","window","localStorage","setItem","JSON","stringify","clearTimeout","current","setTimeout","classes","className","onSubmit","Paper","Grid","container","direction","justify","alignItems","Alert","style","display","severity","TextField","xs","label","value","error","helperText","onChange","nimi","target","salaus","type","Button","variant","color","YksiTehtava","tehtava","tehtavaPoistaminenKasittelija","kayttaja","muokkaaState","nayta","setNayta","nappi","setNappi","setMuokkaa","muokattuKuvaus","setMuokattuKuvaus","nakymanVaihto","kasitteleKuvaus","Muokkaa","muokattava","kommentti","tehtavaService","onClick","Typography","fullWidth","textFiled","multiline","rows","defaultValue","primary","muokkausoikeus","TehtavaSivu","tehtavat","img","maxHeight","textAlign","map","n","TehtavaLomake","setTehtava","setOtsikko","setKommentti","textField","lisatty","concat","e","App","React","setValue","uusiState","arr","useEffect","get","kirjautunutTunnus","getItem","kayttajaTieto","parse","square","Tabs","indicatorColor","textColor","newValue","aria-label","to","Tab","removeItem","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iRAgBeA,EAbD,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAEPC,EAASC,mIAAYC,UAE3BC,QAAQC,IAAIJ,GAJC,SAKWK,IAAMC,KAAN,yCAAqDR,GALhE,cAKPS,EALO,OAMbJ,QAAQC,IAAIG,EAAUC,MACtBL,QAAQC,IAAIG,EAAUC,KAAKC,OAC3BN,QAAQC,IAAI,6CARC,kBASNG,EAAUC,MATJ,2CAAH,sDCFNC,EAAQ,KASVC,GAHMT,mIAAYU,IAGX,uCAAG,WAAOC,GAAP,eAAAb,EAAA,6DACNc,EAAKD,EAASE,IACA,CAChBC,QAASH,EAASG,QAClBC,OAAQJ,EAASI,OACjBC,OAAQL,EAASK,QALT,SAONZ,IAAMa,IAAN,4CAA+CL,GAAMD,GAP/C,2CAAH,uDAUPO,EAAK,uCAAG,WAAMC,GAAN,iBAAArB,EAAA,6DACJsB,EAAS,CACXC,QAAS,CAAEC,cAAed,IAFpB,SAIaJ,IAAMC,KAAK,oCAAqCc,EAASC,GAJtE,cAIJG,EAJI,yBAKHA,EAAShB,MALN,2CAAH,sDAiBI,GAAEE,UAASe,OATd,uCAAG,WAAOZ,GAAP,eAAAd,EAAA,6DAELsB,EAAS,CACXC,QAAS,CAAEC,cAAed,IAHnB,SAKaJ,IAAMqB,OAAN,4CAAkDb,GAAMQ,GALrE,cAMDM,KAAKxB,QAAQC,IAAI,cANhB,2CAAH,sDASsBe,QAAOS,SAlCxB,SAAAC,GACbpB,EAAK,iBAAaoB,K,OC+HPC,MAzHf,YAAiD,IAAfC,EAAc,EAAdA,YAAc,EACVC,mBAAS,IADC,mBACvCC,EADuC,KACvBC,EADuB,OAENF,mBAAS,IAFH,mBAEvCG,EAFuC,KAErBC,EAFqB,OAGRJ,mBAAS,IAHD,mBAGvCK,EAHuC,KAIxCC,GAJwC,KAI/BC,oBAJ+B,EAMdP,mBAAS,QANK,mBAMvCQ,EANuC,KAM7BC,EAN6B,KAS1CC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,gBAAiB,UACjBC,QAASL,EAAMM,QAAQ,GACvBC,OAAQ,OACRC,UAAW,OACXC,SAAU,KAEZC,MAAO,CACLH,OAAQ,QAEVI,MAAO,CACLC,MAAO,IACPC,OAAQ,SAiBNC,EAAa,uCAAG,WAAOC,GAAP,iBAAA5D,EAAA,6DACpB4D,EAAMC,iBACAC,EAA2B,CAACC,OAAQ7B,EAAgB8B,SAAU5B,GAFhD,kBAIUtC,EAASgE,GAJnB,OAIZG,EAJY,OAKlBC,OAAOC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUL,IAChEjC,EAAYiC,GACZpC,EAASA,SAASoC,EAAcvD,OAPd,kDASlBgC,EAAY,QACZ6B,aAAahC,EAAOiC,SACpBjC,EAAOiC,QAAUC,YAAY,WAC3B/B,EAAY,UACX,KAbe,0DAAH,sDAmBbgC,EAAU/B,IAEd,OACE,qBAAKgC,UAAWD,EAAQ5B,KAAxB,SACE,sBAAM8B,SAAUjB,EAAhB,SACE,eAACkB,EAAA,EAAD,CAAOF,UAAWD,EAAQ1B,MAA1B,UACE,cAAC8B,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SAJb,SAOE,sDAKF,cAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,QAAS5C,GAAY6C,SAAS,UAA7C,iEACA,eAACR,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SAJb,UAME,cAACK,EAAA,EAAD,CACEC,GAAI,EAEJb,UAAWD,EAAQnB,MACnBkC,MAAM,0BACNC,MAAOxD,EACPyD,OAAO,EACPC,WAAYtD,EACZuD,SAhEd,SAAyBjC,GACvBA,EAAMC,iBACN,IAAMiC,EAAOlC,EAAMmC,OAAOL,MAC1BvD,EAAU2D,MA+DA,cAACP,EAAA,EAAD,CACEC,GAAI,EACJb,UAAWD,EAAQnB,MACnBkC,MAAM,WACNC,MAAOtD,EACPyD,SAjEd,SAAwBjC,GACtBA,EAAMC,iBACN,IAAMmC,EAASpC,EAAMmC,OAAOL,MAC5BrD,EAAY2D,IA+DAC,KAAK,gBAGX,cAACnB,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SAJf,SAMI,cAACgB,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,YAAYC,MAAM,UAAUhB,MAAO,CAAEhC,OAAQ,UAA3E,+B,SCOGiD,EAxHK,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,8BAA+BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aAAkB,EAC5DxE,oBAAS,GADmD,mBAC/EyE,EAD+E,KACxEC,EADwE,OAE5D1E,mBAAS,eAFmD,mBAE/E2E,EAF+E,KAExEC,EAFwE,OAGxD5E,oBAAS,GAH+C,mBAG/EtB,EAH+E,KAGtEmG,EAHsE,OAI1C7E,qBAJ0C,mBAI/E8E,EAJ+E,KAI/DC,EAJ+D,KAkDpF,IAAMtC,EA1CU9B,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,EACVO,SAAU,IACVF,OAAQ,aAsCIT,GAEhB,SAASsE,IACM,gBAAVL,EACCC,EAAS,WACM,YAATD,GACNC,EAAS,eAEbF,GAAUD,GAGd,IAAMQ,EAAkB,SAACtD,GACrBoD,EAAkBpD,EAAMmC,OAAOL,QAG7ByB,EAAU,SAACvD,GACbA,EAAMC,iBACN,IAAMuD,EAAa,CACfrG,IAAKuF,EAAQvF,IACbC,QAASsF,EAAQtF,QACjBqG,UAAWN,EACX7F,OAAQoF,EAAQpF,QAEpBoG,EAAe3G,QAAQyG,GACvBX,EAAaW,IAIjB,OACI,8BACKV,EAAQ,gCACL,8BAAG,0CAAiBJ,EAAQtF,QAA5B,IAAqC,cAACkF,EAAA,EAAD,CAAQC,QAAQ,YAAYoB,QAAS,kBAAMN,KAA3C,SAA6DL,OAClG,yBAFeN,EAAQvF,KAI3B,gCACI,8BAAG,0CAAiBuF,EAAQtF,QAA5B,IAAqC,cAACkF,EAAA,EAAD,CAAQC,QAAQ,YAAYoB,QAAS,kBAAMN,KAA3C,SAA6DL,OAClG,eAACY,EAAA,EAAD,WAAY,yCAAgBlB,EAAQe,aACpC,8BAAG,2CAAkBf,EAAQpF,UAvEvC,WACI,GAAIoF,EAAQpF,SAAWsF,EACnB,OACI,8BACM7F,EACJ,gCACI,uBAAMiE,SAAUuC,EAAhB,UACI,cAAC5B,EAAA,EAAD,CAAWkC,WAAS,EAChB9C,UAAWD,EAAQgD,UACnB5G,GAAG,4BACH2E,MAAM,wBACNkC,WAAS,EACTC,KAAM,EACNC,aAAa,SACbnC,MAAOqB,EACPlB,SAAUqB,EACVf,QAAQ,WACRf,MAAO,CAAEhC,OAAQ,YAErB,cAAC8C,EAAA,EAAD,CAAQD,KAAK,SAAS6B,SAAS,EAAM3B,QAAQ,YAAYf,MAAO,CAAEhC,OAAQ,aAA1E,wBAIJ,cAAC8C,EAAA,EAAD,CAAQqB,QAAS,kBAAMT,GAAYnG,IAAWwF,QAAQ,YAAYf,MAAO,CAAEhC,OAAQ,aAAnF,qBAGA,cAAC8C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYmB,QAAS,kBAAMhB,EAA8BD,EAAQvF,MAAnG,uBAtBU,cAACmF,EAAA,EAAD,CAAQC,QAAQ,YAAYoB,QAAS,kBAAMT,GAAYnG,IAAvD,uBAoEjBoH,GA0BD,yBA9BMzB,EAAQvF,QChBfiH,EA1DK,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,SAAU1B,EAA2D,EAA3DA,8BAA+BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aAAkB,EAC/DxE,oBAAS,GADsD,gCAEzCA,mBAAS,gBAFgC,6BAqCzF,IAAMyC,EAjCY9B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVO,SAAU,IACVF,OAAQ,UAEVJ,MAAO,CACLE,QAASL,EAAMM,QAAQ,GACvBC,OAAQ,OACRE,SAAU,KAEZE,MAAO,CACLC,MAAO,IACPC,OAAQ,KAEVwE,IAAK,CACH9E,OAAQ,OACRiC,QAAS,QACT/B,SAAU,OACV6E,UAAW,WAcCxF,GAEd,OACE,sBAAKgC,UAAWD,EAAQ5B,KAAxB,UACE,oBAAIsC,MAAO,CAACgD,UAAW,SAAUhF,OAAQ,aAAzC,4BACA,uBACC6E,EAASI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAa7B,aAAcA,EAAcD,SAAUA,EAAUD,8BAA+BA,EAA+BD,QAASgC,WCqDhJC,MA3Gf,YAA+C,IAAvBjC,EAAsB,EAAtBA,QAASkC,EAAa,EAAbA,WAAa,EAEdvG,mBAAS,IAFK,mBAErCjB,EAFqC,KAE5ByH,EAF4B,OAGVxG,mBAAS,IAHC,mBAGrCoF,EAHqC,KAG1BqB,EAH0B,KAOtC/F,GAFMzC,mIAAYU,IAENgC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,gBAAiB,UACjBC,QAASL,EAAMM,QAAQ,GACvBC,OAAQ,OACRC,UAAW,OACXC,SAAU,KAEZC,MAAO,CACLH,OAAQ,QAEVuF,UAAW,CACTtF,UAAW,aAITjC,EAAK,uCAAG,WAAMwC,GAAN,eAAA5D,EAAA,6DACZ4D,EAAMC,iBADM,SAEUyD,EAAelG,MAAM,CACzCJ,QAASA,EACTqG,UAAWA,IAJD,OAENuB,EAFM,OAMZJ,EAAWlC,EAAQuC,OAAOD,IAE1BH,EAAW,IACXC,EAAa,IATD,2CAAH,sDAoBLhE,EAAU/B,IAEhB,OACE,qBAAKgC,UAAWD,EAAQ5B,KAAxB,SACE,sBAAM8B,SAAUxD,EAAhB,SACA,eAACyD,EAAA,EAAD,CAAOF,UAAWD,EAAQ1B,MAA1B,UACE,cAAC8B,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SAJb,SAME,6DAEF,cAACJ,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SAJb,SAME,cAACK,EAAA,EAAD,CACEC,GAAI,EACJb,UAAWD,EAAQnB,MACnBkC,MAAM,UACNI,SAhCV,SAA6BiD,GAC3BL,EAAWK,EAAE/C,OAAOL,QAgCZA,MAAO1E,MAQX,cAACuE,EAAA,EAAD,CAAWkC,WAAS,EAChB9C,UAAWD,EAAQgD,UACnB5G,GAAG,4BACH2E,MAAM,YACNkC,WAAS,EACTC,KAAM,EACNC,aAAa,SACb1B,QAAQ,WACRf,MAAO,CAAEhC,OAAQ,UACjByC,SA9CV,SAAyBiD,GACvBJ,EAAaI,EAAE/C,OAAOL,QA8CdA,MAAO2B,IAEX,cAACvC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SAJf,SAMI,cAACgB,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,YAAYC,MAAM,UAAUhB,MAAO,CAAEhC,OAAQ,aAA3E,oC,kCCsCG2F,MAhIf,WAAe,MAEaC,IAAM/G,SAAS,GAF5B,mBAENyD,EAFM,KAECuD,EAFD,OAGmBhH,qBAHnB,mBAGNuE,EAHM,KAGIxE,EAHJ,OAI6BC,qBAJ7B,gCAMiBA,mBAAS,KAN1B,mBAMNqE,EANM,KAMGkC,EANH,KAaP/B,EAAe,SAACW,GACpB,IAAI8B,EAAY,GAChB5C,EAAQ+B,KAAI,SAAAC,GACVY,EADqBZ,EAAEvH,MAAQqG,EAAWrG,IAC9BmI,EAAUL,OAAOzB,GAEjB8B,EAAUL,OAAOP,MAE/BE,EAAWU,GACXA,EAAY,IAGR3C,EAA6B,uCAAG,WAAMzF,GAAN,eAAAd,EAAA,sDACpCsH,EAAe5F,OAAOZ,GAElBqI,EAAM,GACV7C,EAAQ+B,KAAI,SAAAC,GAAWA,EAAEvH,MAAQD,IAC/BqI,EAAMA,EAAIN,OAAOP,OAEnBE,EAAWW,GAPyB,2CAAH,sDAkCnC,OAnBAC,qBAAU,WACQ9I,IAAM+I,IAAI,qCAClBzH,MAAK,SAAAH,GAAQ,OAAI+G,EAAW/G,EAAShB,WAC5C,IACH2I,qBAAU,WACR,IAAME,EAAoBpF,OAAOC,aAAaoF,QAAQ,qBACtD,GAAID,EAAmB,CACrB,IAAME,EAAgBnF,KAAKoF,MAAMH,GACjChC,EAAezF,SAAS2H,EAAc9I,OACtCsB,EAAYwH,MAEb,IASD,8BAyBGhD,EACC,gCACE,8BAAIA,EAASV,KAAb,gCACA,eAAC,IAAD,WACF,cAACjB,EAAA,EAAD,CAAO6E,QAAM,EAACtE,MAAO,CAAC3B,MAAO,QAASL,OAAQ,UAA9C,SAEA,eAACuG,EAAA,EAAD,CACEjE,MAAOA,EACPkE,eAAe,UACfC,UAAU,UACVhE,SAtFa,SAACjC,EAAOkG,GAC3Bb,EAASa,IAsFHC,aAAW,wBALb,UAOE,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,cAACC,EAAA,EAAD,CAAKxE,MAAM,iBAAWL,MAAO,CAAChC,OAAQ,cACnD,cAAC,IAAD,CAAM4G,GAAG,UAAT,SAAmB,cAACC,EAAA,EAAD,CAAKxE,MAAM,4BAAgBL,MAAO,CAAChC,OAAQ,cAC9D,cAAC,IAAD,CAAM4G,GAAG,IAAT,SAAa,cAACC,EAAA,EAAD,CAAK1C,QAAS,kBA7CjCrD,OAAOC,aAAa+F,WAAW,0BAC/BlI,EAAY,OA4C2CyD,MAAM,gBAAgBL,MAAO,CAAChC,OAAQ,mBAG3F,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAO,cAAC,EAAD,CAAa5D,aAAcA,EAAcF,8BAA+BA,EAA+B0B,SAAU3B,EAASE,SAAUA,EAASV,UAElL,cAAC,IAAD,CAAOsE,KAAK,UAAUC,OAAQ,kBAAO,cAAE,EAAF,CAAgB/D,QAASA,EAASkC,WAAYA,gBAMnF,8BAAK,cAAC,EAAD,CAAyBxG,YAAaA,SClHpCsI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5I,MAAK,YAAkD,IAA/C6I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.9a128d15.chunk.js","sourcesContent":["import axios from 'axios'\r\n/* import env from \"react-dotenv\"; */\r\n\r\nconst kirjaudu = async (body) => {\r\n\r\n    const osoite = process.env.onlineUrl\r\n                          \r\n    console.log(osoite)\r\n    const lahetetty = await axios.post(`http://159.65.20.117/api/kirjautuminen`, body)\r\n    console.log(lahetetty.data)\r\n    console.log(lahetetty.data.token)\r\n    console.log('tässä on palautettu kirjautumisesta')\r\n    return lahetetty.data\r\n\r\n}\r\n\r\nexport default kirjaudu","import axios from 'axios'\r\n    let token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst url = process.env.URL /* 'http://localhost:3001/api/tehtavat' */\r\n\r\n\r\nconst muokkaa = async (muokattu) => {\r\n    const id = muokattu._id\r\n    const lahetettava = {\r\n        otsikko: muokattu.otsikko,\r\n        kuvaus: muokattu.kuvaus,\r\n        tekija: muokattu.tekija\r\n    }\r\n    await axios.put(`http://159.65.20.117/api/tehtavat/${id}`, muokattu)\r\n}\r\n\r\nconst lisaa = async content => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const response = await axios.post('http://159.65.20.117/api/tehtavat', content, config)\r\n    return response.data    \r\n}\r\n\r\nconst poista = async (id) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const poistettu = await axios.delete(`http://159.65.20.117/api/tehtavat/${id}`, config)\r\n    poistettu.then(console.log('poistettu'))\r\n}\r\n\r\nexport default { muokkaa, poista, lisaa, setToken }","import React, { useState, useRef, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport kirjaudu from '../server/kayttajaService'\r\nimport setToken from '../server/tehtavaService'\r\n\r\nfunction SisaankirjautumisLomake({setKayttaja}) {\r\n  const [kayttajaTunnus, setTunnus] = useState('')\r\n  const [kayttajaSalasana, setSalasana] = useState('')\r\n  const [tunnusValid, setTunnusValid] = useState('')\r\n  const timeId = useRef()\r\n  /* const ilmoitus = useRef('none') */\r\n  const [ilmoitus, setIlmoitus] = useState('none')\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    backgroundColor: '#dce2e8',\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    marginTop: '25px',\r\n    maxWidth: 500,\r\n  },\r\n  input: {\r\n    margin: '10px'\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n}));\r\n\r\n\r\nfunction kasitteleTunnus(event) {\r\n  event.preventDefault()\r\n  const nimi = event.target.value\r\n  setTunnus(nimi)\r\n}\r\n\r\nfunction salasanaTunnus(event) {\r\n  event.preventDefault()\r\n  const salaus = event.target.value\r\n  setSalasana(salaus)\r\n}\r\n\r\nconst kirjautuminen = async (event) => {\r\n  event.preventDefault()\r\n  const tunnuksetKirjautumiselle = {tunnus: kayttajaTunnus, salasana: kayttajaSalasana}\r\n  try {\r\n    const vastaanotettu = await kirjaudu(tunnuksetKirjautumiselle)\r\n    window.localStorage.setItem(\"kirjautunutTunnus\", JSON.stringify(vastaanotettu))\r\n    setKayttaja(vastaanotettu)\r\n    setToken.setToken(vastaanotettu.token)\r\n  } catch {\r\n    setIlmoitus('wrap')\r\n    clearTimeout(timeId.current)\r\n    timeId.current = setTimeout( () => {\r\n      setIlmoitus('none')\r\n    }, 1000)\r\n  }\r\n  }\r\n  \r\n\r\n\r\nconst classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form onSubmit={kirjautuminen}>\r\n        <Paper className={classes.paper}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            >\r\n            {/* <p style={{ color: ilmoitus.current }}>{ilmoitus.current}</p> */}\r\n            <h1>Tehtävälista</h1>\r\n          </Grid>\r\n          {/* { if (ilmoitus.current) {\r\n            \r\n          }} */}\r\n          <Alert style={{display: ilmoitus }} severity=\"warning\">Väärä salasana tai käyttäjätunnus</Alert>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField \r\n              xs={6}\r\n              /* onClick={handleTunnusClick} */\r\n              className={classes.input}\r\n              label=\"Käyttäjätunnus\"\r\n              value={kayttajaTunnus}\r\n              error={false}\r\n              helperText={tunnusValid}\r\n              onChange={kasitteleTunnus}\r\n            />\r\n            <TextField\r\n              xs={6}\r\n              className={classes.input}\r\n              label=\"Salasana\"\r\n              value={kayttajaSalasana}\r\n              onChange={salasanaTunnus}\r\n              type=\"password\"\r\n            />\r\n        </Grid>\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ margin: '25px 0' }}>\r\n              Kijaudu\r\n            </Button>\r\n          </Grid>\r\n      </Paper>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SisaankirjautumisLomake","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport tehtavaService from '../../server/tehtavaService'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport muokkaaState from '../../App'\r\n\r\nconst YksiTehtava = ({tehtava, tehtavaPoistaminenKasittelija, kayttaja, muokkaaState}) => {\r\n    const [nayta, setNayta] = useState(true)\r\n    const [nappi, setNappi] = useState('näytä')\r\n    const [muokkaa, setMuokkaa] = useState(false)\r\n    const [muokattuKuvaus, setMuokattuKuvaus] = useState()\r\n\r\n    let array = []\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          flexGrow: 1,\r\n          maxWidth: 900,\r\n          margin: '0 auto'\r\n        }\r\n      }));\r\n\r\n      function muokkausoikeus() {\r\n          if (tehtava.tekija === kayttaja) {\r\n              return (\r\n                  <div>\r\n                      {!muokkaa ? <Button variant=\"contained\" onClick={() => setMuokkaa(!muokkaa)}>muokkaa</Button> :\r\n                    <div>\r\n                        <form onSubmit={Muokkaa}>\r\n                            <TextField fullWidth\r\n                                className={classes.textFiled}\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Tehtävän kuvaus\"\r\n                                multiline\r\n                                rows={5}\r\n                                defaultValue=\"Kuvaus\"\r\n                                value={muokattuKuvaus}\r\n                                onChange={kasitteleKuvaus}\r\n                                variant=\"outlined\"\r\n                                style={{ margin: '25px 0' }}\r\n                            />\r\n                            <Button type=\"submit\" primary={true} variant=\"contained\" style={{ margin: '25px 15px' }}>\r\n                                Muokkaa\r\n                            </Button> \r\n                        </form>\r\n                        <Button onClick={() => setMuokkaa(!muokkaa) } variant=\"contained\" style={{ margin: '25px 15px' }}>\r\n                            Peruuta\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => tehtavaPoistaminenKasittelija(tehtava._id)}>poista</Button>\r\n                    </div>\r\n                    }\r\n                  </div>\r\n              )\r\n          }\r\n      }\r\n\r\n      const classes = useStyles();\r\n\r\n      function nakymanVaihto() {\r\n        if(nappi === 'näytä') {\r\n            setNappi('piilota')\r\n        } else if(nappi ==='piilota') {\r\n            setNappi('näytä')\r\n        }\r\n        setNayta(!nayta)\r\n      }\r\n\r\n    const kasitteleKuvaus = (event) => {\r\n        setMuokattuKuvaus(event.target.value)\r\n    }\r\n\r\n    const Muokkaa = (event) => {\r\n        event.preventDefault()\r\n        const muokattava = {\r\n            _id: tehtava._id,\r\n            otsikko: tehtava.otsikko,\r\n            kommentti: muokattuKuvaus,\r\n            tekija: tehtava.tekija\r\n        }\r\n        tehtavaService.muokkaa(muokattava)\r\n        muokkaaState(muokattava)\r\n    }\r\n\r\n\r\n    return(\r\n        <div /* className={classes.root} */>\r\n            {nayta ? <div key={tehtava._id}>\r\n                <p><b>Otsikko: </b>{tehtava.otsikko} <Button variant=\"contained\" onClick={() => nakymanVaihto()}>{nappi}</Button></p>\r\n                <hr></hr>\r\n            </div> : \r\n            <div key={tehtava._id}>\r\n                <p><b>Otsikko: </b>{tehtava.otsikko} <Button variant=\"contained\" onClick={() => nakymanVaihto()}>{nappi}</Button></p>\r\n                <Typography><b>Kuvaus: </b>{tehtava.kommentti}</Typography>\r\n                <p><b>Omistaja: </b>{tehtava.tekija}</p>\r\n                {muokkausoikeus()}\r\n                {/* {!muokkaa ? <Button variant=\"contained\" onClick={() => setMuokkaa(!muokkaa)}>muokkaa</Button> :\r\n                    <div>\r\n                        <form onSubmit={Muokkaa}>\r\n                            <TextField fullWidth\r\n                                className={classes.textFiled}\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Tehtävän kuvaus\"\r\n                                multiline\r\n                                rows={5}\r\n                                defaultValue=\"Kuvaus\"\r\n                                value={muokattuKuvaus}\r\n                                onChange={kasitteleKuvaus}\r\n                                variant=\"outlined\"\r\n                                style={{ margin: '25px 0' }}\r\n                            />\r\n                            <Button type=\"submit\" primary={true} variant=\"contained\" style={{ margin: '25px 15px' }}>\r\n                                Muokkaa\r\n                            </Button> \r\n                        </form>\r\n                        <Button onClick={() => setMuokkaa(!muokkaa) } variant=\"contained\" style={{ margin: '25px 15px' }}>\r\n                            Peruuta\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => tehtavaPoistaminenKasittelija(tehtava._id)}>poista</Button>\r\n                    </div>\r\n                } */}\r\n                <hr></hr>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YksiTehtava","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport YksiTehtava from './YksiTehtava';\r\n\r\n/* export default function SimpleContainer() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">\r\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n} */\r\n\r\nconst TehtavaSivu = ({tehtavat, tehtavaPoistaminenKasittelija, kayttaja, muokkaaState}) => {\r\n  const [nayta, setNayta] = useState(false)\r\n  const [katkaisijaTeksti, setKatkaisijaTeksit] = useState('näytä')\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 900,\r\n      margin: '0 auto'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: 'auto',\r\n      maxWidth: 500,\r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 128,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100%',\r\n      maxHeight: '100%',\r\n    },\r\n  }));\r\n\r\n  function nayttaminen() {\r\n    if (nayta) {\r\n      setKatkaisijaTeksit('piilota')\r\n    } else if (!nayta) {\r\n      setKatkaisijaTeksit('näytä')\r\n    }\r\n    setNayta(!nayta);\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n    return(\r\n      <div className={classes.root}>\r\n        <h1 style={{textAlign: 'center', margin: '60px auto'}}>Tehtävät</h1>\r\n        <hr></hr>\r\n        {tehtavat.map(n => <YksiTehtava muokkaaState={muokkaaState} kayttaja={kayttaja} tehtavaPoistaminenKasittelija={tehtavaPoistaminenKasittelija} tehtava={n} />)}\r\n      </div>\r\n    )\r\n\r\n  /* return (\r\n    <div className={classes.root}>\r\n      <YksiTehtava />\r\n      <h2>Tähän tulee tehtäväsivu</h2>\r\n      {tehtavat.map(n => <p key={n.id}>\r\n        Tehtävä: {n.otsikko} omistaja: {n.omistajaId}\r\n        <button onClick={() => nayttaminen()}>{katkaisijaTeksti}</button></p>)}\r\n    </div>\r\n  ); */\r\n}\r\n\r\nexport default TehtavaSivu\r\n\r\n\r\n/* \r\n\r\nensimmäinen onko asia? {<p>asia</p>} : <p>toinen aasia</p>\r\n\r\n*/","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport tehtavaService from '../server/tehtavaService'\r\n\r\nfunction TehtavaLomake({tehtava, setTehtava}) {\r\n\r\n  const [otsikko, setOtsikko] = useState('')\r\n  const [kommentti, setKommentti] = useState('')\r\n\r\n  const url = process.env.URL\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      backgroundColor: '#dce2e8',\r\n      padding: theme.spacing(2),\r\n      margin: 'auto',\r\n      marginTop: '25px',\r\n      maxWidth: 500,\r\n    },\r\n    input: {\r\n      margin: '10px'\r\n    },\r\n    textField: {\r\n      marginTop: '25px',\r\n    }\r\n  }));\r\n\r\n  const lisaa = async event => {\r\n    event.preventDefault();\r\n    const lisatty = await tehtavaService.lisaa({\r\n      otsikko: otsikko,\r\n      kommentti: kommentti\r\n    })\r\n    setTehtava(tehtava.concat(lisatty))\r\n\r\n    setOtsikko('')\r\n    setKommentti('')\r\n  }\r\n\r\n  function handleOtsikkoChange(e) {\r\n    setOtsikko(e.target.value)\r\n  }\r\n\r\n  function handleKommentti(e) {\r\n    setKommentti(e.target.value)\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form onSubmit={lisaa}>\r\n      <Paper className={classes.paper}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          >\r\n          <h1>Lisää tehtävä</h1>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField \r\n            xs={6}\r\n            className={classes.input}\r\n            label=\"Otsikko\"\r\n            onChange={handleOtsikkoChange}\r\n            value={otsikko}\r\n          />\r\n          {/* <TextField\r\n            xs={6}\r\n            className={classes.input}\r\n            label=\"Tekijä\"\r\n          /> */}\r\n        </Grid>\r\n        <TextField fullWidth\r\n            className={classes.textFiled}\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Kommentti\"\r\n            multiline\r\n            rows={5}\r\n            defaultValue=\"Kuvaus\"\r\n            variant=\"outlined\"\r\n            style={{ margin: '25px 0' }}\r\n            onChange={handleKommentti}\r\n            value={kommentti}\r\n          />\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ margin: '25px 15px' }}>\r\n              Lähetä\r\n            </Button>\r\n          </Grid>\r\n      </Paper>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TehtavaLomake","/* import './App.css'; */\nimport SisaankirjautumisLomake from './components/SisaankirjautumisLomake'\nimport tehtavaService from './server/tehtavaService'\nimport TehtavaSivu from './components/tehtava/TehtavaSivu'\nimport TehtavaLomake from './components/TehtavaLomake'\nimport React, {useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  /* const initialKirj = localStorage.getItem('kayttaja') */\n  const [value, setValue] = React.useState(2);\n  const [kayttaja, setKayttaja] = useState()\n  const [testiKayttaja, setTestiKayttaja] = useState()\n\n  const [tehtava, setTehtava] = useState([])\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  \n\n  const muokkaaState = (muokattava) => {\n    let uusiState = []\n    tehtava.map(n => { if (n._id === muokattava._id) {\n      uusiState = uusiState.concat(muokattava)\n    } else {\n      uusiState = uusiState.concat(n)\n    } })\n    setTehtava(uusiState)\n    uusiState = []\n  }\n\n  const tehtavaPoistaminenKasittelija = async id => {\n    tehtavaService.poista(id)\n    /* await axios.delete(`http://localhost:3001/api/tehtavat/${id}`) */\n    let arr = []\n    tehtava.map(n => { if (n._id !== id) {\n      arr = arr.concat(n)\n    } })\n    setTehtava(arr)\n  }\n\n  function kirUlos() {\n    localStorage.removeItem('kirjautunutTunnus')\n    setKayttaja(null)\n  }\n\n  useEffect(() => {\n    const request = axios.get('http://159.65.20.117/api/tehtavat')\n    request.then(response => setTehtava(response.data))\n  }, [])\n  useEffect(() => {\n    const kirjautunutTunnus = window.localStorage.getItem('kirjautunutTunnus')\n    if (kirjautunutTunnus) {\n      const kayttajaTieto = JSON.parse(kirjautunutTunnus)\n      tehtavaService.setToken(kayttajaTieto.token)\n      setKayttaja(kayttajaTieto)\n    }\n  }, [])\n  \n\n  function kirjauduUlos() {\n    window.localStorage.removeItem('kirjautunutTunnus')\n    setKayttaja(null)\n  }\n\n  return (\n    <div>\n      {/* <h1>{kayttaja.tunnus}</h1> */}\n      \n      {/* <Router>\n        <Paper square style={{width: '500px', margin: '0 auto'}}>\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n        >\n          <Link to=\"/tehtavalista\"><Tab label=\"Tehtävät\" style={{margin: '0 auto'}} /></Link>\n          <Link to=\"/lomake\"><Tab label=\"Lisää tehtävä\" style={{margin: '0 auto'}} /></Link>\n          <Tab to=\"/lomake\" label=\"kirjaudu ulos\" style={{margin: '0 auto'}} />\n        </Tabs>\n      </Paper>\n      <Switch>\n        \n        <Route path=\"/tehtavalista\" render={() => (<TehtavaSivu tehtavat={tehtava} />)} />\n        <Route path=\"/lomake\" component={TehtavaLomake} />\n        \n      </Switch>\n      \n      </Router> */}\n      {kayttaja ? \n        <div>\n          <p>{kayttaja.nimi}: Kirjautunut sisään</p>\n          <Router>\n        <Paper square style={{width: '500px', margin: '0 auto'}}>\n        \n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n        >\n          <Link to=\"/\"><Tab label=\"Tehtävät\" style={{margin: '0 auto'}} /></Link>\n          <Link to=\"/lomake\"><Tab label=\"Lisää tehtävä\" style={{margin: '0 auto'}} /></Link>\n          <Link to=\"/\"><Tab onClick={() => kirjauduUlos()} label=\"kirjaudu ulos\" style={{margin: '0 auto'}} /></Link>\n        </Tabs>\n      </Paper>\n      <Switch>\n        \n        <Route exact path=\"/\" render={() => (<TehtavaSivu muokkaaState={muokkaaState} tehtavaPoistaminenKasittelija={tehtavaPoistaminenKasittelija} tehtavat={tehtava} kayttaja={kayttaja.nimi} />)} />\n        {/* <Route path=\"/lomake\" component={TehtavaLomake} /> */}\n        <Route path=\"/lomake\" render={() => (< TehtavaLomake tehtava={tehtava} setTehtava={setTehtava} />)} /> \n      </Switch>\n      \n      </Router>\n        </div>  \n        :\n        <div><SisaankirjautumisLomake setKayttaja={setKayttaja} /></div>\n    } \n      \n\n\n      {/* { !kirjautuminen ? \n      <SisaankirjautumisLomake kirjautuminen={kirjautuminen} setKirjautuminen={setKirjautuminen} /> :\n      <div>\n        <Button onClick={() => kirUlos()}>Kirjaudu ulos</Button> \n        <TehtavaSivu tehtavat={tehtava} />\n      </div>\n    } */}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}